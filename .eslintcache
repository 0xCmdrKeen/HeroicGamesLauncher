[{"/media/ssd480/Develop/Electron/heroic/src/index.tsx":"1","/media/ssd480/Develop/Electron/heroic/src/reportWebVitals.ts":"2","/media/ssd480/Develop/Electron/heroic/src/App.tsx":"3","/media/ssd480/Develop/Electron/heroic/src/helper.ts":"4","/media/ssd480/Develop/Electron/heroic/src/components/Library.tsx":"5","/media/ssd480/Develop/Electron/heroic/src/components/UI/GameCard.tsx":"6","/media/ssd480/Develop/Electron/heroic/src/components/UI/Login.tsx":"7","/media/ssd480/Develop/Electron/heroic/src/components/Settings.tsx":"8","/media/ssd480/Develop/Electron/heroic/src/components/UI/Header.tsx":"9","/media/ssd480/Develop/Electron/heroic/src/components/NavBar.tsx":"10","/media/ssd480/Develop/Electron/heroic/src/components/UI/UserSelector.tsx":"11","/media/ssd480/Develop/Electron/heroic/src/components/UI/SearchBar.tsx":"12","/media/ssd480/Develop/Electron/heroic/src/state/GlobalState.tsx":"13","/media/ssd480/Develop/Electron/heroic/src/state/ContextProvider.tsx":"14","/media/ssd480/Develop/Electron/heroic/src/components/UI/GamePage.tsx":"15","/media/ssd480/Develop/Electron/heroic/src/components/UI/ToggleSwitch.tsx":"16","/media/ssd480/Develop/Electron/heroic/src/components/UI/Update.tsx":"17"},{"size":587,"mtime":1610207662116,"results":"18","hashOfConfig":"19"},{"size":425,"mtime":1609009065758,"results":"20","hashOfConfig":"19"},{"size":1294,"mtime":1610207662110,"results":"21","hashOfConfig":"19"},{"size":2207,"mtime":1610209585462,"results":"22","hashOfConfig":"19"},{"size":612,"mtime":1610303994111,"results":"23","hashOfConfig":"19"},{"size":825,"mtime":1610309174006,"results":"24","hashOfConfig":"19"},{"size":2814,"mtime":1610207662113,"results":"25","hashOfConfig":"19"},{"size":6649,"mtime":1610309174006,"results":"26","hashOfConfig":"19"},{"size":1193,"mtime":1610309174006,"results":"27","hashOfConfig":"19"},{"size":583,"mtime":1610207662113,"results":"28","hashOfConfig":"19"},{"size":1018,"mtime":1610207662113,"results":"29","hashOfConfig":"19"},{"size":870,"mtime":1610309174006,"results":"30","hashOfConfig":"19"},{"size":2910,"mtime":1610309174006,"results":"31","hashOfConfig":"19"},{"size":451,"mtime":1610207662116,"results":"32","hashOfConfig":"19"},{"size":8375,"mtime":1610309174006,"results":"33","hashOfConfig":"19"},{"size":336,"mtime":1610207662113,"results":"34","hashOfConfig":"19"},{"size":214,"mtime":1610207662113,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1uko0tc",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"/media/ssd480/Develop/Electron/heroic/src/index.tsx",[],["73","74"],"/media/ssd480/Develop/Electron/heroic/src/reportWebVitals.ts",[],"/media/ssd480/Develop/Electron/heroic/src/App.tsx",[],"/media/ssd480/Develop/Electron/heroic/src/helper.ts",[],"/media/ssd480/Develop/Electron/heroic/src/components/Library.tsx",[],"/media/ssd480/Develop/Electron/heroic/src/components/UI/GameCard.tsx",[],"/media/ssd480/Develop/Electron/heroic/src/components/UI/Login.tsx",[],"/media/ssd480/Develop/Electron/heroic/src/components/Settings.tsx",[],"/media/ssd480/Develop/Electron/heroic/src/components/UI/Header.tsx",[],"/media/ssd480/Develop/Electron/heroic/src/components/NavBar.tsx",[],"/media/ssd480/Develop/Electron/heroic/src/components/UI/UserSelector.tsx",[],"/media/ssd480/Develop/Electron/heroic/src/components/UI/SearchBar.tsx",[],["75","76"],"/media/ssd480/Develop/Electron/heroic/src/state/GlobalState.tsx",["77"],"import React, { useEffect, useState } from \"react\";\nimport Update from \"../components/UI/Update\";\nimport { getLegendaryConfig, legendary } from \"../helper\";\nimport { Game } from \"../types\";\nimport ContextProvider from \"./ContextProvider\";\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nconst GlobalState = ({ children }: Props) => {\n  const [user, setUser] = useState(\"\");\n  const [filterText, setFilterText] = useState(\"\");\n  const [data, setData] = useState([] as Game[]);\n  const [installing, setInstalling] = useState([] as string[]);\n  const [playing, setPlaying] = useState([] as string[]);\n  const [refreshing, setRefreshing] = useState(false);\n  const [error, setError] = useState(false);\n  const [onlyInstalled, setOnlyInstalled] = useState(false);\n\n  const refresh = async (): Promise<void> => {\n    setRefreshing(true);\n    const { user, library } = await getLegendaryConfig();\n    setUser(user);\n    setData(library);\n    setRefreshing(false);\n  };\n\n  const refreshLibrary = async (): Promise<void> => {\n    setRefreshing(true);\n    await legendary(\"list-games\");\n    refresh();\n  };\n\n  const handleSearch = (input: string) => setFilterText(input);\n  const handleOnlyInstalled = () => setOnlyInstalled(!onlyInstalled);\n\n  const handleInstalling = (appName: string) => {\n    const isInstalling = installing.includes(appName);\n\n    // FIXME: For some reason the state is not being updated here without the timeout\n    if (isInstalling) {\n      const updatedInstalling = installing.filter((game) => game !== appName);\n      setTimeout(() => {\n        setInstalling(updatedInstalling);\n      }, 200);\n      return\n      \n    }\n    return setInstalling([...installing, appName]);\n  };\n\n  const handlePlaying = (appName: string) => {\n    const isPlaying = playing.includes(appName);\n\n    if (isPlaying) {\n      const updatedPlaying = playing.filter((game) => game !== appName);\n      return setPlaying(updatedPlaying);\n    }\n\n    return setPlaying([...playing, appName]);\n  };\n\n  useEffect(() => {\n    refresh();\n  }, []);\n\n  if (refreshing) {\n    return <Update />;\n  }\n\n  const filterRegex: RegExp = new RegExp(String(filterText), \"i\");\n  const textFilter = ({ title }: Game) => filterRegex.test(title);\n  const installedFilter = (game: Game) =>\n    onlyInstalled ? game.isInstalled : true;\n  const filteredLibrary = data.filter(installedFilter).filter(textFilter);\n\n  return (\n    <ContextProvider.Provider\n      value={{\n        user,\n        onlyInstalled,\n        refreshing,\n        playing,\n        installing,\n        error,\n        data: filteredLibrary,\n        refresh: refresh,\n        refreshLibrary: refreshLibrary,\n        handleInstalling: handleInstalling,\n        handlePlaying: handlePlaying,\n        handleOnlyInstalled: handleOnlyInstalled,\n        handleSearch: handleSearch,\n      }}\n    >\n      {children}\n    </ContextProvider.Provider>\n  );\n};\n\nexport default GlobalState;\n","/media/ssd480/Develop/Electron/heroic/src/state/ContextProvider.tsx",[],"/media/ssd480/Develop/Electron/heroic/src/components/UI/GamePage.tsx",[],"/media/ssd480/Develop/Electron/heroic/src/components/UI/ToggleSwitch.tsx",[],"/media/ssd480/Develop/Electron/heroic/src/components/UI/Update.tsx",[],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"78","replacedBy":"82"},{"ruleId":"80","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":18,"column":17,"nodeType":"86","messageId":"87","endLine":18,"endColumn":25},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],["88"],["89"],"@typescript-eslint/no-unused-vars","'setError' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]